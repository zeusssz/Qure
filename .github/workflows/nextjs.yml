name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set working directory to /app
        run: |
          cd app
          ls -al # Check contents of /app to verify presence of package.json or yarn.lock

      - name: Detect package manager
        id: detect-package-manager
        run: |
          # This will ensure we're in the /app directory and can detect the package manager
          if [ -f "app/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "app/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            app/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('app/**/package-lock.json', 'app/**/yarn.lock') }}-${{ hashFiles('app/**.[jt]s', 'app/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('app/**/package-lock.json', 'app/**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          cd app
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: |
          cd app
          ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Export static site
        run: |
          cd app
          ${{ steps.detect-package-manager.outputs.runner }} next export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: app/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
